syntax = "proto3";

import "constants.proto";

/* Data structure of Session command1 packet */
message SessionCmd1 {
    bytes client_verify_data = 2;
}

/* Data structure of Session response1 packet */
message SessionResp1 {
    Status status = 1;
    bytes device_verify_data = 3;
}

/* Data structure of Session command0 packet */
message SessionCmd0 {
    bytes client_pubkey = 1;
}

/* Data structure of Session response0 packet */
message SessionResp0 {
    Status status = 1;  
    bytes device_pubkey = 2;
    bytes device_random = 3;
}

/* A message must be of type Cmd0 / Cmd1 / Resp0 / Resp1 */
enum Sec1MsgType {
    Session_Command0 = 0;
    Session_Response0 = 1;
    Session_Command1 = 2;
    Session_Response1 = 3;
}

/* Request message (client -> server) */
message Request {
    Sec1MsgType msg = 1;   // 标识请求类型（Cmd0 或 Cmd1）
    oneof payload {
        SessionCmd0 cmd0 = 2;  // 如果 msg == Session_Command0
        SessionCmd1 cmd1 = 3;  // 如果 msg == Session_Command1
    }
}

/* Response message (server -> client) */
message Response {
    Sec1MsgType msg = 1;   // 标识响应类型（Resp0 或 Resp1）
    oneof payload {
        SessionResp0 resp0 = 2;  // 如果 msg == Session_Response0
        SessionResp1 resp1 = 3;  // 如果 msg == Session_Response1
    }
}

/* 兼容旧版 Sec1Payload（可选，如果需要向后兼容） */
message Sec1Payload {
    Sec1MsgType msg = 1;
    oneof payload {
        SessionCmd0 sc0 = 20;
        SessionResp0 sr0 = 21;
        SessionCmd1 sc1 = 22;
        SessionResp1 sr1 = 23;
    }
}